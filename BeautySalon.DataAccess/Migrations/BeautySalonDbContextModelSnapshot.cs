// <auto-generated />
using System;
using BeautySalon.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BeautySalon.DataAccess.Migrations
{
    [DbContext(typeof(BeautySalonDbContext))]
    partial class BeautySalonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BeautySalon.Domain.Models.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KorisnikId"));

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("PosljednjaPrijava")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Uloga")
                        .HasColumnType("integer");

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnici");

                    b.HasDiscriminator().HasValue("Korisnik");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TerminId"));

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KlijentId")
                        .HasColumnType("integer");

                    b.Property<string>("KomentarZaposlenika")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ZaposlenikId")
                        .HasColumnType("integer");

                    b.HasKey("TerminId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("ZaposlenikId");

                    b.ToTable("Termini");
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Klijent", b =>
                {
                    b.HasBaseType("BeautySalon.Domain.Models.Korisnik");

                    b.Property<int>("BrojBodova")
                        .HasColumnType("integer");

                    b.Property<string>("Zahtjevi")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasDiscriminator().HasValue("Klijent");
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Zaposlenik", b =>
                {
                    b.HasBaseType("BeautySalon.Domain.Models.Korisnik");

                    b.Property<string>("Certifikat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Specijalizacija")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasDiscriminator().HasValue("Zaposlenik");
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Termin", b =>
                {
                    b.HasOne("BeautySalon.Domain.Models.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautySalon.Domain.Models.Zaposlenik", "Zaposlenik")
                        .WithMany()
                        .HasForeignKey("ZaposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klijent");

                    b.Navigation("Zaposlenik");
                });
#pragma warning restore 612, 618
        }
    }
}
