// <auto-generated />
using System;
using BeautySalon.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BeautySalon.DataAccess.Migrations
{
    [DbContext(typeof(BeautySalonDbContext))]
    [Migration("20250525101810_MakeStavkaTerminaIdIdentity")]
    partial class MakeStavkaTerminaIdIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BeautySalon.Domain.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("korisnik_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datum_registracije");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ime");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lozinka");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prezime");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("telefon");

                    b.Property<int>("UlogaId")
                        .HasColumnType("integer")
                        .HasColumnName("uloga_id");

                    b.Property<DateTime?>("VrijemeZadnjePrijave")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("vrijeme_zadnje_prijave");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UlogaId");

                    b.ToTable("KORISNIK", (string)null);
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.StavkaTermina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("stavka_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cijena");

                    b.Property<int>("Kolicina")
                        .HasColumnType("integer")
                        .HasColumnName("kolicina");

                    b.Property<int>("TerminId")
                        .HasColumnType("integer")
                        .HasColumnName("termin_id");

                    b.Property<int>("UslugaId")
                        .HasColumnType("integer")
                        .HasColumnName("usluga_id");

                    b.HasKey("Id");

                    b.HasIndex("TerminId");

                    b.HasIndex("UslugaId");

                    b.ToTable("STAVKA_TERMINA", (string)null);
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Termin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("termin_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("date")
                        .HasColumnName("datum");

                    b.Property<int>("KlijentId")
                        .HasColumnType("integer")
                        .HasColumnName("korisnik_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.Property<int>("TrajanjeMinuta")
                        .HasColumnType("integer")
                        .HasColumnName("trajanje");

                    b.Property<TimeSpan>("Vrijeme")
                        .HasColumnType("time")
                        .HasColumnName("vrijeme");

                    b.Property<int>("ZaposlenikId")
                        .HasColumnType("integer")
                        .HasColumnName("zaposlenik_id");

                    b.HasKey("Id");

                    b.HasIndex("KlijentId");

                    b.HasIndex("ZaposlenikId");

                    b.ToTable("TERMIN", (string)null);
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Uloga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("uloga_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NazivUloge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("naziv_uloge");

                    b.HasKey("Id");

                    b.HasIndex("NazivUloge")
                        .IsUnique();

                    b.ToTable("ULOGA", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NazivUloge = "Klijent"
                        },
                        new
                        {
                            Id = 2,
                            NazivUloge = "Zaposlenik"
                        },
                        new
                        {
                            Id = 3,
                            NazivUloge = "Administrator"
                        });
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Usluga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usluga_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cijena");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("naziv");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("opis");

                    b.Property<int>("TrajanjeMinuta")
                        .HasColumnType("integer")
                        .HasColumnName("trajanje");

                    b.HasKey("Id");

                    b.HasIndex("Naziv")
                        .IsUnique();

                    b.ToTable("USLUGA", (string)null);
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Korisnik", b =>
                {
                    b.HasOne("BeautySalon.Domain.Models.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.StavkaTermina", b =>
                {
                    b.HasOne("BeautySalon.Domain.Models.Termin", null)
                        .WithMany("StavkeTermina")
                        .HasForeignKey("TerminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautySalon.Domain.Models.Usluga", "Usluga")
                        .WithMany()
                        .HasForeignKey("UslugaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Termin", b =>
                {
                    b.HasOne("BeautySalon.Domain.Models.Korisnik", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BeautySalon.Domain.Models.Korisnik", "Zaposlenik")
                        .WithMany()
                        .HasForeignKey("ZaposlenikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Klijent");

                    b.Navigation("Zaposlenik");
                });

            modelBuilder.Entity("BeautySalon.Domain.Models.Termin", b =>
                {
                    b.Navigation("StavkeTermina");
                });
#pragma warning restore 612, 618
        }
    }
}
